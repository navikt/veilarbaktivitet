package no.nav.veilarbaktivitet.mock_nav_modell;

import no.nav.common.json.JsonUtils;
import no.nav.veilarbaktivitet.oppfolging.client.OppfolgingPeriodeMinimalDTO;
import no.nav.veilarbaktivitet.oppfolging.periode.Oppfolgingsperiode;
import no.nav.veilarbaktivitet.person.Navn;
import no.nav.veilarbaktivitet.person.Person;

import java.time.ZonedDateTime;
import java.util.Collections;
import java.util.List;
import java.util.UUID;

import static com.github.tomakehurst.wiremock.client.WireMock.*;

public class WireMockUtil {

    static void stubBruker(MockBruker mockBruker) {
        String fnr = mockBruker.getFnr();
        Person.AktorId aktorId = mockBruker.getAktorId();
        boolean erManuell = mockBruker.getBrukerOptions().isErManuell();
        boolean erReservertKrr = mockBruker.getBrukerOptions().isErReservertKrr();
        boolean erUnderKvp = mockBruker.getBrukerOptions().isErUnderKvp();
        boolean kanVarsles = mockBruker.getBrukerOptions().isKanVarsles();
        boolean underOppfolging = mockBruker.getBrukerOptions().isUnderOppfolging();
        Navn navn = mockBruker.getBrukerOptions().getNavn();
        String kontorsperreEnhet = mockBruker.getOppfolgingsenhet();
        boolean oppfolgingFeiler = mockBruker.getBrukerOptions().isOppfolgingFeiler();
        Oppfolgingsperiode nyesteOppfølgingsperiode = mockBruker.getNyesteOppfølgingsperiode();
        Long sakId = mockBruker.getBrukerOptions().getSakId();
        String mål = mockBruker.getBrukerOptions().getMål();

        oppfolging(fnr, aktorId, underOppfolging, oppfolgingFeiler, nyesteOppfølgingsperiode);
        manuell(fnr, erManuell, erReservertKrr, kanVarsles);
        kvp(aktorId, erUnderKvp, kontorsperreEnhet);
        aktor(fnr, aktorId);
        hentPerson(fnr, navn);
        forhaandsvisning();
        journalforing();
        hentSak(sakId, nyesteOppfølgingsperiode);
        hentMål(mål);
    }

    private static void oppfolging(String fnr, Person.AktorId aktorId, boolean underOppfolging, boolean oppfolgingFeiler, Oppfolgingsperiode nyesteOppfølgingsperiode) {
        if (oppfolgingFeiler) {
            stubFor(get("/veilarboppfolging/api/v2/oppfolging?fnr=" + fnr)
                    .willReturn(aResponse().withStatus(500)));
            stubFor(get("/veilarboppfolging/api/v2/oppfolging/periode/gjeldende?fnr="
                    + fnr)
                    .willReturn(aResponse().withStatus(500)));
            stubFor(get("/veilarboppfolging/api/v2/oppfolging/perioder?aktorId=" + aktorId.get())
                    .willReturn(aResponse().withStatus(500)));
            return;
        }
        stubFor(get("/veilarboppfolging/api/v2/oppfolging?fnr=" + fnr)
                .willReturn(ok()
                        .withHeader("Content-Type", "text/json")
                        .withBody("{\"erUnderOppfolging\":" + underOppfolging + "}")));

        if (underOppfolging) {
            OppfolgingPeriodeMinimalDTO oppfolgingsperiode = new OppfolgingPeriodeMinimalDTO(
                    nyesteOppfølgingsperiode.oppfolgingsperiodeId(),
                    nyesteOppfølgingsperiode.startTid(),
                    nyesteOppfølgingsperiode.sluttTid()
            );
            OppfolgingPeriodeMinimalDTO gammelPeriode = new OppfolgingPeriodeMinimalDTO(
                    UUID.randomUUID(),
                    ZonedDateTime.now().minusDays(100),
                    ZonedDateTime.now().minusDays(50)
            );

            String gjeldendePeriode = JsonUtils.toJson(oppfolgingsperiode);

            String oppfolgingsperioder = JsonUtils.toJson(List.of(oppfolgingsperiode, gammelPeriode));
            stubFor(get("/veilarboppfolging/api/v2/oppfolging/periode/gjeldende?fnr=" + fnr)
                    .willReturn(ok()
                            .withHeader("Content-Type", "text/json")
                            .withBody(gjeldendePeriode)));
            stubFor(get("/veilarboppfolging/api/v2/oppfolging/perioder?aktorId=" + aktorId.get())
                    .willReturn(ok()
                            .withHeader("Content-Type", "text/json")
                            .withBody(oppfolgingsperioder)));

        } else {
            stubFor(get("/veilarboppfolging/api/v2/oppfolging/periode/gjeldende?fnr=" + fnr)
                    .willReturn(aResponse().withStatus(204)));
            stubFor(get("/veilarboppfolging/api/v2/oppfolging/perioder?aktorId=" + aktorId.get())
                    .willReturn(ok()
                            .withHeader("Content-Type", "text/json")
                            .withBody(JsonUtils.toJson(Collections.emptyList()))));
        }
    }

    private static void manuell(String fnr, boolean erManuell, boolean erReservertKrr, boolean kanVarsles) {
        stubFor(get("/veilarboppfolging/api/v2/manuell/status?fnr=" + fnr)
                .willReturn(ok()
                        .withHeader("Content-Type", "text/json")
                        .withBody("{\"erUnderManuellOppfolging\":" + erManuell + ",\"krrStatus\":{\"kanVarsles\":" + kanVarsles + ",\"erReservert\":" + erReservertKrr + "}}")));
    }

    private static void kvp(Person.AktorId aktorId, boolean erUnderKvp, String enhet) {
        if (erUnderKvp) {
            stubFor(get("/veilarboppfolging/api/v2/kvp?aktorId=" + aktorId.get())
                    .willReturn(ok()
                            .withHeader("Content-Type", "text/json")
                            .withBody("{\"enhet\":\"" + enhet + "\"}")));
        } else {
            stubFor(get("/veilarboppfolging/api/v2/kvp?aktorId=" + aktorId.get())
                    .willReturn(aResponse().withStatus(204)));
        }
    }

    public static void aktorUtenGjeldende(String fnr, Person.AktorId aktorId) {
        stubFor(post(urlEqualTo("/pdl/graphql"))
                .withRequestBody(matching("^.*FOLKEREGISTERIDENT.*"))
                .withRequestBody(matchingJsonPath("$.variables.ident", equalTo(aktorId.get())))
                .willReturn(aResponse()
                        .withBody("""
                                {
                                  "data": {
                                    "hentIdenter": {
                                      "identer": null
                                    }
                                  },
                                  "errors": [{
                                    "message": "Fant ikke person"
                                  }]
                                }
                                """)));

        stubFor(post(urlEqualTo("/pdl/graphql"))
                .withRequestBody(matching("^.*AKTORID.*"))
                .withRequestBody(matchingJsonPath("$.variables.ident", equalTo(fnr)))
                .willReturn(aResponse()
                        .withBody("""
                                {
                                  "data": {
                                    "hentIdenter": {
                                      "identer": null
                                    }
                                  },
                                  "errors": [{
                                    "message": "Fant ikke person"
                                  }]
                                }
                                """)));
    }

    private static void aktor(String fnr, Person.AktorId aktorId) {

        stubFor(post(urlEqualTo("/pdl/graphql"))
                .withRequestBody(matching("^.*FOLKEREGISTERIDENT.*"))
                .withRequestBody(matchingJsonPath("$.variables.ident", equalTo(aktorId.get())))
                .willReturn(aResponse()
                        .withBody("""
                                {
                                  "data": {
                                    "hentIdenter": {
                                      "identer": [{
                                         "ident": "%s",
                                         "historisk": false,
                                         "gruppe": "FOLKEREGISTERIDENT"
                                      }
                                      ]
                                    }
                                  }
                                }
                                """.formatted(fnr))));

        stubFor(post(urlEqualTo("/pdl/graphql"))
                .withRequestBody(matching("^.*AKTORID.*"))
                .withRequestBody(matchingJsonPath("$.variables.ident", equalTo(fnr)))
                .willReturn(aResponse()
                        .withBody("""
                                {
                                  "data": {
                                    "hentIdenter": {
                                      "identer": [{
                                         "ident": "%s",
                                         "historisk": false,
                                         "gruppe": "AKTORID"
                                         
                                      }]
                                    }
                                  }
                                }
                                """.formatted(aktorId.get()))));
    }

    private static void hentPerson(String fnr, Navn navn) {
        stubFor(post(urlEqualTo("/pdl/graphql"))
                .withRequestBody(matching("^.*hentPerson.*"))
                .withRequestBody(matchingJsonPath("$.variables.ident", equalTo(fnr)))
                .willReturn(aResponse()
                        .withBody("""
                            {
                              "data": {
                                "hentPerson": {
                                  "navn": [
                                    {
                                      "fornavn": "%s",
                                      "mellomnavn": %s,
                                      "etternavn": "%s",
                                      "metadata": {
                                          "master": "FREG"
                                      }
                                    }
                                  ]
                                }
                              }
                            }
                            """.formatted(navn.getFornavn(), navn.getMellomnavn(), navn.getEtternavn()))));
    }

    private static String pdfByteArray = "";
    private static void forhaandsvisning() {
        stubFor(post("/orkivar/forhaandsvisning")
                .willReturn(aResponse()
                        .withBody("""
                                {
                                   "pdf":"%s",
                                   "sistJournalført": "2024-03-13T14:11:48.478662"
                                }
                                """.formatted(pdfByteArray))));
    }

    private static void journalforing() {
        stubFor(post("/orkivar/arkiver")
                .willReturn(aResponse().withStatus(200).withBody("""
                            {
                               "sistJournalført": "2024-03-13T14:11:48.478662"
                            }
                        """)));
    }

    private static void hentSak(Long sakId, Oppfolgingsperiode oppfolgingsperiode) {
        if (oppfolgingsperiode != null) {
            var oppfolgingsperiodeId = oppfolgingsperiode.oppfolgingsperiodeId();

            stubFor(post(urlMatching("/veilarboppfolging/api/v3/sak/" + oppfolgingsperiodeId))
                    .willReturn(ok()
                            .withHeader("Content-Type", "text/json")
                            .withBody("""
                                {
                                "oppfolgingsperiodeId": "%s",
                                "sakId": %d,
                                "fagsaksystem":  "ARBEIDSOPPFOLGING",
                                "tema": "OPP"
                                }
                                """.formatted(oppfolgingsperiodeId, sakId))));
        }
    }

    private static void hentMål(String mål) {
        stubFor(get(urlMatching("/veilarboppfolging/api/oppfolging/mal\\?fnr=([0-9]*)"))
                .willReturn(ok()
                        .withHeader("Content-Type", "application/json")
                        .withBody("""
                                {
                                    "mal": "%s",
                                    "endretAv": "VEILEDER",
                                    "dato": "2024-03-18T14:22:17.442331+01:00"
                                }
                                """.formatted(mål))));
    }
}