spring.main.banner-mode=off
server.servlet.context-path=/veilarbaktivitet
server.error.include-message=always

management.endpoint.metrics.access=read_only
management.endpoints.web.base-path=/internal
management.endpoints.web.exposure.include=health,info,prometheus
management.prometheus.metrics.export.enabled=true
management.endpoint.prometheus.access=read_only
management.metrics.distribution.percentiles-histogram.http.server.requests=true
management.metrics.distribution.slo.http=100ms, 200ms, 500ms, 1s


# Vi migrerer databasen med flyway manuelt
spring.flyway.enabled=false
# Vi setter opp kobling til database manuelt
spring.data.jdbc.repositories.enabled=false
# Pr√∏v √• doble antall threads. default 200, for √• se om treghet issues mot arena funker bedre n√•
server.tomcat.threads.max=400
server.shutdown=graceful
# Application environment
app.env.kafkaBrokersUrl=${KAFKA_BROKERS_URL}

app.env.veilarena.serviceurl=${VEILARBARENA_URL}

app.env.appname=${NAIS_APP_NAME}
app.env.namespace=${NAIS_NAMESPACE}
app.env.cluster=${NAIS_CLUSTER_NAME}

app.env.poao_tilgang.url = ${POAO_TILGANG_URL}
app.env.poao_tilgang.scope = ${POAO_TILGANG_SCOPE}

app.env.aktivitetsplan.basepath=${AKTIVITETSPLAN_URL}

app.env.naisAadDiscoveryUrl=${AZURE_APP_WELL_KNOWN_URL}
app.env.naisAadClientId=${AZURE_APP_CLIENT_ID}

# TODO rydd bort de som ikke er i bruk
app.kafka.brokersUrl=${KAFKA_BROKERS_URL}
app.kafka.producer-client-id=veilarbaktivitet-producer
app.kafka.consumer-group-id=veilarbaktivitet-consumer
app.kafka.schema-regestry-url=${KAFKA_SCHEMAS_URL}
app.kafka.enabled=${KAFKA_ENABLED}
app.datasource.url=${DB_JDBC_URL}
app.datasource.username=${DB_USERNAME}
app.datasource.password=${DB_PASSWORD}

orkivar.url=${ORKIVAR_URL}
veilarbdialog.url=${VEILARBDIALOG_URL}
axsys.url=${AXSYS_URL}
pdl.url=${PDL_URL}
pdl.scope=${PDL_SCOPE}
gcp.projectId=${GCP_TEAM_PROJECT_ID}

unleash.appName=${NAIS_APP_NAME}
unleash.url=${UNLEASH_SERVER_API_URL}
unleash.token=${UNLEASH_SERVER_API_TOKEN}
unleash.instanceId=${NAIS_CLIENT_ID}
###############################################
#               SCHEDULED DELAYS              #
###############################################
app.env.scheduled.default.initialDelay=60000
app.env.scheduled.default.fixedDelay=30000
app.env.scheduled.portefolje.initialDelay=30000
app.env.scheduled.portefolje.fixedDelay=500
## SCHEDULER POOL SIZE ###
spring.task.scheduling.pool.size=5
#spring.threads.virtual.enabled=true <- Ikke enda - AuthContext fungerer ikke alltid - har ikke funnet ut hvorfor - THreadLocal skal funke likt med viruelle trÂder
###############################################
#                    TOPICS                   #
###############################################
## Aiven
topic.inn.aktivitetskort=dab.aktivitetskort-v1.1
topic.ut.aktivitetskort-feil=dab.aktivitetskort-feil-v1
topic.ut.aktivitetskort-idmapping=dab.aktivitetskort-idmapping-v1
topic.ut.aktivitetdata.rawjson=pto.temp-aktivitetdata-json-v1
topic.ut.portefolje=pto.aktivitet-portefolje-v1
topic.inn.stillingFraNav=pto.deling-av-stilling-fra-nav-forespurt-v2
topic.ut.stillingFraNav=pto.stilling-fra-nav-oppdatert-v2
topic.inn.rekrutteringsbistandStatusoppdatering=pto.rekrutteringsbistand-statusoppdatering-v1
topic.ut.brukernotifikasjon.brukervarsel=min-side.aapen-brukervarsel-v1
topic.inn.brukernotifikasjon.brukervarselHendelse=min-side.aapen-varsel-hendelse-v1
topic.inn.oppfolgingsperiode=pto.oppfolgingsperiode-v1
topic.inn.kvpAvsluttet=pto.kvp-avsluttet-v1
topic.ut.oversikten=obo.portefolje-hendelsesfilter-v1
###############################################
#                KAFKA AIVEN                  #
###############################################
spring.kafka.properties.ssl.truststore.type=JKS
spring.kafka.properties.ssl.keystore.type=PKCS12
spring.kafka.properties.security.protocol=SSL
spring.kafka.properties.ssl.truststore.location=${KAFKA_TRUSTSTORE_PATH}
spring.kafka.properties.ssl.keystore.location=${KAFKA_KEYSTORE_PATH}
spring.kafka.properties.ssl.truststore.password=${KAFKA_CREDSTORE_PASSWORD}
spring.kafka.properties.ssl.keystore.password=${KAFKA_CREDSTORE_PASSWORD}
spring.kafka.properties.ssl.key.password=${KAFKA_CREDSTORE_PASSWORD}
spring.kafka.properties.specific.avro.reader=true
#            SCHEMA REGISTRY                  #
spring.kafka.bootstrap-servers=${KAFKA_BROKERS}
spring.kafka.properties.schema.registry.url=${KAFKA_SCHEMA_REGISTRY}
spring.kafka.properties.basic.auth.credentials.source=USER_INFO
spring.kafka.properties.basic.auth.user.info=${KAFKA_SCHEMA_REGISTRY_USER}:${KAFKA_SCHEMA_REGISTRY_PASSWORD}
###############################################
#                  Consumer                   #
###############################################
spring.kafka.consumer.group-id=veilarbaktivitet
spring.kafka.consumer.max-poll-records=1
spring.kafka.consumer.properties.enable.auto.commit=true
spring.kafka.consumer.properties.retry.backoff.ms=2000
spring.kafka.consumer.properties.reconnect.backoff.ms=2000
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.listener.ack-mode=record
spring.kafka.consumer.key-deserializer=org.springframework.kafka.support.serializer.ErrorHandlingDeserializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.ErrorHandlingDeserializer
###############################################
#                  Producer                   #
###############################################
spring.kafka.producer.acks=all
spring.kafka.producer.batch-size=1
spring.kafka.producer.properties.max.block.ms=2000
spring.kafka.producer.properties.enable.idempotence=true

app.env.kassering.godkjenteIdenter=${VEILARB_KASSERING_IDENTER}
shedlock.lockAtLeastFor=PT1M